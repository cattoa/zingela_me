%h1.page-header
  Appendix B - Community Composition -
  =@community.description
%h3
  %span.col-lg-12
    Date Created :
    = DateTime.now.to_s(:db)
- report_community = @community.report_communities.first
- community_growth_forms = CommunityGrowthForm.where(report_community_id:report_community.id).order(:order)
- community_growth_forms.each do |community_growth_form|
  %h3
    %span.col-lg-6
      Growth Form :
      = community_growth_form.description
    %span.col-lg-6
      Std Error of the mean :
      = community_growth_form.std_error
  -if community_growth_form.has_strong_competitor?
    %h3
      %span.col-lg-12 Strong Competitors
    - community_covers = CommunityCover.where(community_growth_form_id:community_growth_form.id,competitor:0).order(:difference)
    - total_percentage_cover = 0
    - total_proportional_cover = 0
    %table.table.table-striped.table-bordered
      %th.col-lg-4 Species
      %th.col-lg-2 Actual cover
      %th.col-lg-2 Predicted
      %th.col-lg-2 difference
      %th.col-lg-2 Frequency
      - objArray = Array.new
      - community_covers.each do |community_cover|
        - total_percentage_cover = total_percentage_cover + community_cover.percentage_cover
        - total_proportional_cover = total_proportional_cover + community_cover.proportional_cover
        %tr
          %td
            = community_cover.species.name
          %td
            = community_cover.percentage_cover.round(2)
          %td
            = community_cover.predicted_cover.round(2)
          %td
            = community_cover.difference.round(2)
          %td
            = community_cover.count
      %tr
        %td
          %b
            Total percentage cover
        %td
          = total_percentage_cover.round(2)
      %tr
        %td
          %b
            Total proportional cover
        %td
          = total_proportional_cover.round(2)
  -if community_growth_form.has_normal_competitor?
    %h3
      %span.col-lg-12 Normal Competitors
    - community_covers = CommunityCover.where(community_growth_form_id:community_growth_form.id,competitor:1).order(:difference)
    - total_percentage_cover = 0
    - total_proportional_cover = 0
    %table.table.table-striped.table-bordered
      %th.col-lg-4 Species
      %th.col-lg-2 Actual cover
      %th.col-lg-2 Predicted
      %th.col-lg-2 difference
      %th.col-lg-2 Frequency
      - objArray = Array.new
      - community_covers.each do |community_cover|
        - total_percentage_cover = total_percentage_cover + community_growth_form.percentage_cover
        - total_proportional_cover = total_proportional_cover + community_growth_form.proportional_cover
        %tr
          %td
            = community_cover.species.name
          %td
            = community_growth_form.percentage_cover.round(2)
          %td
            = community_cover.predicted_cover.round(2)
          %td
            = community_cover.difference.round(2)
          %td
            = community_cover.count
      %tr
        %td
          %b
            Total percentage cover
        %td
          = total_percentage_cover.round(2)
      %tr
        %td
          %b
            Total propotional cover
        %td
          = total_proportional_cover.round(2)

  -if community_growth_form.has_weak_competitor?
    %h3
      %span.col-lg-12 Weak Competitors
    - community_covers = CommunityCover.where(community_growth_form_id:community_growth_form.id,competitor:2).order(:difference)
    - total_percentage_cover = 0
    - total_proportional_cover = 0
    %table.table.table-striped.table-bordered
      %th.col-lg-4 Species
      %th.col-lg-2 Actual cover
      %th.col-lg-2 Predicted
      %th.col-lg-2 difference
      %th.col-lg-2 Frequency
      - objArray = Array.new
      - community_covers.each do |community_cover|
        - total_percentage_cover = total_percentage_cover + community_cover.percentage_cover
        - total_proportional_cover = total_proportional_cover + community_cover.proportional_cover
        %tr
          %td
            = community_cover.species.name
          %td
            = community_cover.percentage_cover.round(2)
          %td
            = community_cover.predicted_cover.round(2)
          %td
            = community_cover.difference.round(2)
          %td
            = community_cover.count
      %tr
        %td
          %b
            Total percentage cover
        %td
          = total_percentage_cover.round(2)
      %tr
        %td
          %b
            Total proportional cover
        %td
          = total_proportional_cover.round(2)
